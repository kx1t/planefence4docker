# PLANEFENCE.CONF - user changeable variables for PLANEFENCE.SH
#
# Copyright 2020 Ramon F. Kolb - licensed under the terms and conditions
# of GPLv3. The terms and conditions of this license are included with the Github
# distribution of this package, and are also available here:
# https://github.com/kx1t/planefence/
#
# The package contains parts of, and modifications or derivatives to the following:
# Dump1090.Socket30003 by Ted Sluis: https://github.com/tedsluis/dump1090.socket30003
# These packages may incorporate other software and license terms.
#
# Summary of License Terms
# This program is free software: you can redistribute it and/or modify it under the terms of
# the GNU General Public License as published by the Free Software Foundation, either version 3
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this program.
# If not, see https://www.gnu.org/licenses/.
# -----------------------------------------------------------------------------------
# Feel free to make changes to the variables below. However, it is
# STRONGLY RECOMMENDED to RTFM! See explanation below and README.md for explanation of what these do.
#
#
# The web directory you want PlaneFence to write to:

	OUTFILEDIR=/usr/share/dump1090-fa/html/planefence 

#
# the directory where this file and planefence.py are located:

	PLANEFENCEDIR=/usr/share/planefence 

#
# MAXALT: only planes below this altitude are reported. Must correspond to the altitude unit set in socket30003.conf:

	MAXALT=5000 

#
# DIST: only planes closer than this distance are reported:

	DIST=2.0

#
# Latitude and Longitude of the center point of the map (see also CALCDIST below)"

	LAT=42.39663 # Latitude of the center point of the map
	LON=-71.17726 # Longitude of the center point of the map

#
# HISTTIME: number of days shown in the history section of the website:

	HISTTIME=7 

#
# CALCDIST determines if we will recalculate the distance to the plane based on the LON/LAT parameters provided above
# If set to CALCDIST="--calcdist", then:
#	- The system will recalculate the distance for every plane
#	- ATTENTION: the DIST parameter above will subsequently be interpreted in STATUTE (US) MILES
#	- If you prefer to use a different unit (km, nautical miles, etc.) please do NOT set CALCDIST="--calcdist"
# If set to CALCDIST="", then
#	- the system will interpret the distance provided by socket30003 in whatever the units are that socket30003 uses
#	- you MUST use this if your data is not in STATUTE MILES
#	- If you want to change the centerpoint of your calculations, you must change LONG/LAT in socket30003.conf. See that package
#	  for information on how to do this
#	- LON and LAT as defined above are only used in the title of the HTML page

#	CALCDIST="--calcdist"
	CALCDIST=""
	
#
# MY:text for the header of the website.

	MY="my" 

#
# link for $MY in the website's header. This can be a full URL, or a relative location like ".."

	MYURL=".."

#
# Twitter handle for PlaneTweet. Comment this out if PlaneTweet is not available or disabled
# NOTE - if this field is defined and not empty, PlaneFence WILL try to invoke PlaneTweet to send a tweet!
# By default it's disabled. If enabled, note that tweeting will ONLY work if you also follow the PlaneTweet
# instructions for installation and set-up.

#	PLANETWEET="PlaneBoston"

#
# PlaneHeat is an add-on that gets installed by default. It tracks a daily heatmap for planes that fly inside the 
# PlaneFence coverage area. If you don't want to use it, comment out the parameter below.
# Normally, you don't need to update this parameter unless you moved 'planeheat.sh' to some other location,
# which we don't recommend doing unless you know which other files to move with it.

        PLANEHEATSCRIPT=$PLANEFENCEDIR/planeheat.sh

#
# The next few variables are only relevant if you are using NoiseCapt
# Note - the system figures out by itself is NoiseCapt is running (by looking at the NoiseCapt Systemd Service), so you don't need to set this here.
# The next few variables define the background colors for the cell that contains the Loudness information on the website

	RED="LightCoral" # background cell color for Loudness
	YELLOW="Gold" # background cell color for Loudness
	GREEN="YellowGreen" # background cell color for Loudness

#
# These variables define the limit values for Loudness to be show green or yellow (instead of red)
# For example: if GREENLIMIT=9 and YELLOWLIMIT=16, then 9 dB or less loudness will show as $GREEN, 
# 10-16 dB loudness will show as $YELLOW, and 17 dB or more loudness will show as $RED

	GREENLIMIT=9 # Max. Loudness level to be shown green
	YELLOWLIMIT=16 # Max. Loudness level to be shown yellow

#
# Last, a few variables related to logging:
#
# LOGFILE indicates where we write logs to.
# Use one of these:
# LOGFILE=/path/to/logfile.log
# LOGFILE=/dev/null # this switches off logging entirely
# LOGFILE=logger # if $LOGFILE is set to "logger", then the logs are written to /var/log/syslog. This is good for debugging purposes.
# LOGFILE=/dev/stdout # this writes the log to the terminal you're currently logged into. Normally not very useful.

	LOGFILE=/tmp/planefence.log

#
# VERBOSE indicates if we capture verbose information from planefence.py.
# The only valid values are VERBOSE="--verbose" and VERBOSE=""

	VERBOSE="--verbose"

#
# The following parameters define the file names of the temporary files and the output files
# If you set $OUTFILEDIR to the correct HTML path above, you shouldn't have to change anything here.

#
# TMPDIR is the location of the tmp directory, normally /tmp
        TMPDIR=/tmp

#
# LOGFILEBASE is the pull path name for the base part of the Socket30003 log file name.
# That file normally has the format /tmp/dump1090-127_0_0_1-[yymmdd].txt

        LOGFILEBASE=$TMPDIR/dump1090-127_0_0_1-

#
# OUTFILEBASE is the full path name for the base part of the output file

        OUTFILEBASE=$OUTFILEDIR/planefence

#
# OUTFILEHTML and OUTFILECSV are the full HTML / CSV file names that today's data will be written to.
# PLANEHEATHTML is the file name that the localized heatmap will be stored in.
#
# Note that planefence.sh will create FENCEDATE depending on the command line argument. If no command line
# argument is provided, 'today' is assumed.
# As such, you can rely on FENCEDATE to be the correct date string in the format "yymmdd".

        OUTFILEHTML=$OUTFILEBASE-$FENCEDATE.html
        OUTFILECSV=$OUTFILEBASE-$FENCEDATE.csv
        PLANEHEATHTML=$OUTFILEBASE-$FENCEDATE-heatmap.html


# The script smartly only processes those lines from the socket30003 output file that haven't previously been assessed.
# When you run the script regularly (say, every 2 minutes), this will save you TONS of processing time. We need a few temp
# files to keep track of all of this:

        OUTFILETMP=$TMPDIR/dump1090-pf-temp.csv
        INFILETMP=$TMPDIR/dump1090-pf.txt
        TMPLINES=$TMPDIR/dump1090-pf-temp-$FENCEDATE.tmp

#
# HISTORY and HISTFILE:
# This is for future-proofing. Currently, the history data is written directly to the planefence HTML file.
# In the future, we are planning to create a separate history file that gets dynamically loaded as an IFRAME.
# The current approach has the advantage that each file, even old files, contains links to the 7 previous days
# counting from when the file was generated. The future change will only display the 7 days history from 'today', 
# regardless of which (past) date you are looking at.
 
        HISTORY=history.html
        HISTFILE=$OUTFILEDIR/$HISTORY

#
# Last, the version. Although you could change this, for tracking purposes, we'd like you to leave it to whatever the
# official version number is. If you fork this software, we'd appreciate if you add on to the version number rather than
# replace the entire number. That way, it's easy to understand from which version you forked. For example, VERSION=3.11-myfork-1.0

        VERSION=3.11

